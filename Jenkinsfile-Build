pipeline {
    agent any
    
    environment {
        DEV_REPO = 'https://github.com/SantiagoAngel007/microservice-app-example.git'
        DEV_BRANCH = 'feature/test-startup'
        IMAGE_TAG = "${BUILD_NUMBER}"
        REGISTRY_PREFIX = 'microservices'
    }
    
    stages {
        stage('Checkout Development Code') {
            steps {
                sh "rm -rf microservice-app-example"
                sh "git clone ${DEV_REPO} microservice-app-example"
                sh "cd microservice-app-example && git checkout ${DEV_BRANCH}"
            }
        }
        
        stage('Cleanup Old Images') {
            steps {
                sh '''
                    docker rmi ${REGISTRY_PREFIX}/auth-api:latest 2>/dev/null || true
                    docker rmi ${REGISTRY_PREFIX}/users-api:latest 2>/dev/null || true
                    docker rmi ${REGISTRY_PREFIX}/todos-api:latest 2>/dev/null || true
                    docker rmi ${REGISTRY_PREFIX}/log-message-processor:latest 2>/dev/null || true
                    docker rmi ${REGISTRY_PREFIX}/frontend:latest 2>/dev/null || true
                    docker rmi ${REGISTRY_PREFIX}/auth-api:${IMAGE_TAG} 2>/dev/null || true
                    docker rmi ${REGISTRY_PREFIX}/users-api:${IMAGE_TAG} 2>/dev/null || true
                    docker rmi ${REGISTRY_PREFIX}/todos-api:${IMAGE_TAG} 2>/dev/null || true
                    docker rmi ${REGISTRY_PREFIX}/log-message-processor:${IMAGE_TAG} 2>/dev/null || true
                    docker rmi ${REGISTRY_PREFIX}/frontend:${IMAGE_TAG} 2>/dev/null || true
                '''
            }
        }
        
        stage('Build Auth API') {
            steps {
                dir('microservice-app-example/auth-api') {
                    sh """
                        docker build -t ${REGISTRY_PREFIX}/auth-api:latest .
                        docker tag ${REGISTRY_PREFIX}/auth-api:latest ${REGISTRY_PREFIX}/auth-api:${IMAGE_TAG}
                    """
                }
            }
        }
        
        stage('Build Users API') {
            steps {
                dir('microservice-app-example/users-api') {
                    sh """
                        docker build -t ${REGISTRY_PREFIX}/users-api:latest .
                        docker tag ${REGISTRY_PREFIX}/users-api:latest ${REGISTRY_PREFIX}/users-api:${IMAGE_TAG}
                    """
                }
            }
        }
        
        stage('Build Todos API') {
            steps {
                dir('microservice-app-example/todos-api') {
                    sh """
                        docker build -t ${REGISTRY_PREFIX}/todos-api:latest .
                        docker tag ${REGISTRY_PREFIX}/todos-api:latest ${REGISTRY_PREFIX}/todos-api:${IMAGE_TAG}
                    """
                }
            }
        }
        
        stage('Build Log Message Processor') {
            steps {
                dir('microservice-app-example/log-message-processor') {
                    sh """
                        docker build -t ${REGISTRY_PREFIX}/log-message-processor:latest .
                        docker tag ${REGISTRY_PREFIX}/log-message-processor:latest ${REGISTRY_PREFIX}/log-message-processor:${IMAGE_TAG}
                    """
                }
            }
        }
        
        stage('Build Frontend') {
            steps {
                dir('microservice-app-example/frontend') {
                    sh """
                        docker build -t ${REGISTRY_PREFIX}/frontend:latest .
                        docker tag ${REGISTRY_PREFIX}/frontend:latest ${REGISTRY_PREFIX}/frontend:${IMAGE_TAG}
                    """
                }
            }
        }
        
        stage('Verify Images') {
            steps {
                sh """
                    docker inspect ${REGISTRY_PREFIX}/auth-api:latest >/dev/null 2>&1 && echo "Auth API: OK" || exit 1
                    docker inspect ${REGISTRY_PREFIX}/users-api:latest >/dev/null 2>&1 && echo "Users API: OK" || exit 1
                    docker inspect ${REGISTRY_PREFIX}/todos-api:latest >/dev/null 2>&1 && echo "Todos API: OK" || exit 1
                    docker inspect ${REGISTRY_PREFIX}/log-message-processor:latest >/dev/null 2>&1 && echo "Log Processor: OK" || exit 1
                    docker inspect ${REGISTRY_PREFIX}/frontend:latest >/dev/null 2>&1 && echo "Frontend: OK" || exit 1
                """
            }
        }
    }
    
    post {
        always {
            sh "rm -rf microservice-app-example"
        }
        
        success {
            echo "Build completed successfully. Images ready for deployment."
        }
        
        failure {
            sh "docker image prune -f"
        }
    }
}